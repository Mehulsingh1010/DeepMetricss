/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/compare/models/route";
exports.ids = ["app/api/compare/models/route"];
exports.modules = {

/***/ "(rsc)/./app/api/compare/models/route.ts":
/*!*****************************************!*\
  !*** ./app/api/compare/models/route.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _configs_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/configs/db */ \"(rsc)/./configs/db.js\");\n/* harmony import */ var _configs_schema__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/configs/schema */ \"(rsc)/./configs/schema.js\");\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! drizzle-orm */ \"(rsc)/./node_modules/drizzle-orm/sql/expressions/conditions.js\");\n/* harmony import */ var _lib_gemini__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/gemini */ \"(rsc)/./lib/gemini.ts\");\n\n\n\n\n\nasync function POST(request) {\n    try {\n        const { modelIds, datasetId } = await request.json();\n        if (!modelIds || !Array.isArray(modelIds) || modelIds.length < 2) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"At least two model IDs are required\"\n            }, {\n                status: 400\n            });\n        }\n        // Fetch models from database\n        const modelData = await _configs_db__WEBPACK_IMPORTED_MODULE_1__.db.query.models.findMany({\n            where: (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_4__.inArray)(_configs_schema__WEBPACK_IMPORTED_MODULE_2__.models.id, modelIds)\n        });\n        if (modelData.length !== modelIds.length) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"One or more models not found\"\n            }, {\n                status: 404\n            });\n        }\n        // Get existing analyses for these models\n        const analysesData = await _configs_db__WEBPACK_IMPORTED_MODULE_1__.db.query.analyses.findMany({\n            where: (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_4__.inArray)(_configs_schema__WEBPACK_IMPORTED_MODULE_2__.analyses.modelId, modelIds)\n        });\n        // Compare models with Gemini\n        const comparisonResults = await (0,_lib_gemini__WEBPACK_IMPORTED_MODULE_3__.compareModelsWithGemini)(modelData, datasetId, analysesData);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            models: comparisonResults\n        });\n    } catch (error) {\n        console.error(\"Error comparing models:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to compare models\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2NvbXBhcmUvbW9kZWxzL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE0RDtBQUMzQjtBQUNrQjtBQUNkO0FBQ2lCO0FBRS9DLGVBQWVNLEtBQUtDLE9BQW9CO0lBQzdDLElBQUk7UUFDRixNQUFNLEVBQUVDLFFBQVEsRUFBRUMsU0FBUyxFQUFFLEdBQUcsTUFBTUYsUUFBUUcsSUFBSTtRQUVsRCxJQUFJLENBQUNGLFlBQVksQ0FBQ0csTUFBTUMsT0FBTyxDQUFDSixhQUFhQSxTQUFTSyxNQUFNLEdBQUcsR0FBRztZQUNoRSxPQUFPYixxREFBWUEsQ0FBQ1UsSUFBSSxDQUFDO2dCQUFFSSxPQUFPO1lBQXNDLEdBQUc7Z0JBQUVDLFFBQVE7WUFBSTtRQUMzRjtRQUVBLDZCQUE2QjtRQUM3QixNQUFNQyxZQUFZLE1BQU1mLDJDQUFFQSxDQUFDZ0IsS0FBSyxDQUFDZixNQUFNLENBQUNnQixRQUFRLENBQUM7WUFDL0NDLE9BQU9mLG9EQUFPQSxDQUFDRixtREFBTUEsQ0FBQ2tCLEVBQUUsRUFBRVo7UUFDNUI7UUFFQSxJQUFJUSxVQUFVSCxNQUFNLEtBQUtMLFNBQVNLLE1BQU0sRUFBRTtZQUN4QyxPQUFPYixxREFBWUEsQ0FBQ1UsSUFBSSxDQUFDO2dCQUFFSSxPQUFPO1lBQStCLEdBQUc7Z0JBQUVDLFFBQVE7WUFBSTtRQUNwRjtRQUVBLHlDQUF5QztRQUN6QyxNQUFNTSxlQUFlLE1BQU1wQiwyQ0FBRUEsQ0FBQ2dCLEtBQUssQ0FBQ2QsUUFBUSxDQUFDZSxRQUFRLENBQUM7WUFDcERDLE9BQU9mLG9EQUFPQSxDQUFDRCxxREFBUUEsQ0FBQ21CLE9BQU8sRUFBRWQ7UUFDbkM7UUFFQSw2QkFBNkI7UUFDN0IsTUFBTWUsb0JBQW9CLE1BQU1sQixvRUFBdUJBLENBQUNXLFdBQVdQLFdBQVdZO1FBRTlFLE9BQU9yQixxREFBWUEsQ0FBQ1UsSUFBSSxDQUFDO1lBQ3ZCUixRQUFRcUI7UUFDVjtJQUNGLEVBQUUsT0FBT1QsT0FBTztRQUNkVSxRQUFRVixLQUFLLENBQUMsMkJBQTJCQTtRQUN6QyxPQUFPZCxxREFBWUEsQ0FBQ1UsSUFBSSxDQUFDO1lBQUVJLE9BQU87UUFBMkIsR0FBRztZQUFFQyxRQUFRO1FBQUk7SUFDaEY7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMRU5PVk9cXERlc2t0b3BcXE1haW5zXFxtbC1hbmFseXplclxcYXBwXFxhcGlcXGNvbXBhcmVcXG1vZGVsc1xccm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHlwZSBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSBcIm5leHQvc2VydmVyXCJcclxuaW1wb3J0IHsgZGIgfSBmcm9tIFwiQC9jb25maWdzL2RiXCJcclxuaW1wb3J0IHsgbW9kZWxzLCBhbmFseXNlcyB9IGZyb20gXCJAL2NvbmZpZ3Mvc2NoZW1hXCJcclxuaW1wb3J0IHsgaW5BcnJheSB9IGZyb20gXCJkcml6emxlLW9ybVwiXHJcbmltcG9ydCB7IGNvbXBhcmVNb2RlbHNXaXRoR2VtaW5pIH0gZnJvbSBcIkAvbGliL2dlbWluaVwiXHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB7IG1vZGVsSWRzLCBkYXRhc2V0SWQgfSA9IGF3YWl0IHJlcXVlc3QuanNvbigpXHJcblxyXG4gICAgaWYgKCFtb2RlbElkcyB8fCAhQXJyYXkuaXNBcnJheShtb2RlbElkcykgfHwgbW9kZWxJZHMubGVuZ3RoIDwgMikge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogXCJBdCBsZWFzdCB0d28gbW9kZWwgSURzIGFyZSByZXF1aXJlZFwiIH0sIHsgc3RhdHVzOiA0MDAgfSlcclxuICAgIH1cclxuXHJcbiAgICAvLyBGZXRjaCBtb2RlbHMgZnJvbSBkYXRhYmFzZVxyXG4gICAgY29uc3QgbW9kZWxEYXRhID0gYXdhaXQgZGIucXVlcnkubW9kZWxzLmZpbmRNYW55KHtcclxuICAgICAgd2hlcmU6IGluQXJyYXkobW9kZWxzLmlkLCBtb2RlbElkcyksXHJcbiAgICB9KVxyXG5cclxuICAgIGlmIChtb2RlbERhdGEubGVuZ3RoICE9PSBtb2RlbElkcy5sZW5ndGgpIHtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6IFwiT25lIG9yIG1vcmUgbW9kZWxzIG5vdCBmb3VuZFwiIH0sIHsgc3RhdHVzOiA0MDQgfSlcclxuICAgIH1cclxuXHJcbiAgICAvLyBHZXQgZXhpc3RpbmcgYW5hbHlzZXMgZm9yIHRoZXNlIG1vZGVsc1xyXG4gICAgY29uc3QgYW5hbHlzZXNEYXRhID0gYXdhaXQgZGIucXVlcnkuYW5hbHlzZXMuZmluZE1hbnkoe1xyXG4gICAgICB3aGVyZTogaW5BcnJheShhbmFseXNlcy5tb2RlbElkLCBtb2RlbElkcyksXHJcbiAgICB9KVxyXG5cclxuICAgIC8vIENvbXBhcmUgbW9kZWxzIHdpdGggR2VtaW5pXHJcbiAgICBjb25zdCBjb21wYXJpc29uUmVzdWx0cyA9IGF3YWl0IGNvbXBhcmVNb2RlbHNXaXRoR2VtaW5pKG1vZGVsRGF0YSwgZGF0YXNldElkLCBhbmFseXNlc0RhdGEpXHJcblxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcclxuICAgICAgbW9kZWxzOiBjb21wYXJpc29uUmVzdWx0cyxcclxuICAgIH0pXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBjb21wYXJpbmcgbW9kZWxzOlwiLCBlcnJvcilcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiBcIkZhaWxlZCB0byBjb21wYXJlIG1vZGVsc1wiIH0sIHsgc3RhdHVzOiA1MDAgfSlcclxuICB9XHJcbn1cclxuXHJcbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJkYiIsIm1vZGVscyIsImFuYWx5c2VzIiwiaW5BcnJheSIsImNvbXBhcmVNb2RlbHNXaXRoR2VtaW5pIiwiUE9TVCIsInJlcXVlc3QiLCJtb2RlbElkcyIsImRhdGFzZXRJZCIsImpzb24iLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJlcnJvciIsInN0YXR1cyIsIm1vZGVsRGF0YSIsInF1ZXJ5IiwiZmluZE1hbnkiLCJ3aGVyZSIsImlkIiwiYW5hbHlzZXNEYXRhIiwibW9kZWxJZCIsImNvbXBhcmlzb25SZXN1bHRzIiwiY29uc29sZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/compare/models/route.ts\n");

/***/ }),

/***/ "(rsc)/./configs/db.js":
/*!***********************!*\
  !*** ./configs/db.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   db: () => (/* binding */ db)\n/* harmony export */ });\n/* harmony import */ var _neondatabase_serverless__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @neondatabase/serverless */ \"(rsc)/./node_modules/@neondatabase/serverless/index.mjs\");\n/* harmony import */ var drizzle_orm_neon_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! drizzle-orm/neon-http */ \"(rsc)/./node_modules/drizzle-orm/neon-http/driver.js\");\n/* harmony import */ var _schema__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schema */ \"(rsc)/./configs/schema.js\");\n\n\n\n// Check if DATABASE_URL is defined\nif (!process.env.DATABASE_URL) {\n    console.warn(\"DATABASE_URL is not defined. Using in-memory database for development.\");\n}\n// Create a SQL client with the database URL\nconst sql = (0,_neondatabase_serverless__WEBPACK_IMPORTED_MODULE_0__.neon)(process.env.DATABASE_URL || \"postgresql://user:password@localhost:5432/ml_analyzer\");\n// Create a database instance with the schema\nconst db = (0,drizzle_orm_neon_http__WEBPACK_IMPORTED_MODULE_2__.drizzle)(sql, {\n    schema: _schema__WEBPACK_IMPORTED_MODULE_1__\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9jb25maWdzL2RiLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBK0M7QUFDQTtBQUNiO0FBRWxDLG1DQUFtQztBQUNuQyxJQUFJLENBQUNHLFFBQVFDLEdBQUcsQ0FBQ0MsWUFBWSxFQUFFO0lBQzdCQyxRQUFRQyxJQUFJLENBQUM7QUFDZjtBQUVBLDRDQUE0QztBQUM1QyxNQUFNQyxNQUFNUiw4REFBSUEsQ0FBQ0csUUFBUUMsR0FBRyxDQUFDQyxZQUFZLElBQUk7QUFFN0MsNkNBQTZDO0FBQ3RDLE1BQU1JLEtBQUtSLDhEQUFPQSxDQUFDTyxLQUFLO0lBQUVOLE1BQU1BLHNDQUFBQTtBQUFDLEdBQUUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTEVOT1ZPXFxEZXNrdG9wXFxNYWluc1xcbWwtYW5hbHl6ZXJcXGNvbmZpZ3NcXGRiLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG5lb24gfSBmcm9tIFwiQG5lb25kYXRhYmFzZS9zZXJ2ZXJsZXNzXCJcclxuaW1wb3J0IHsgZHJpenpsZSB9IGZyb20gXCJkcml6emxlLW9ybS9uZW9uLWh0dHBcIlxyXG5pbXBvcnQgKiBhcyBzY2hlbWEgZnJvbSBcIi4vc2NoZW1hXCJcclxuXHJcbi8vIENoZWNrIGlmIERBVEFCQVNFX1VSTCBpcyBkZWZpbmVkXHJcbmlmICghcHJvY2Vzcy5lbnYuREFUQUJBU0VfVVJMKSB7XHJcbiAgY29uc29sZS53YXJuKFwiREFUQUJBU0VfVVJMIGlzIG5vdCBkZWZpbmVkLiBVc2luZyBpbi1tZW1vcnkgZGF0YWJhc2UgZm9yIGRldmVsb3BtZW50LlwiKVxyXG59XHJcblxyXG4vLyBDcmVhdGUgYSBTUUwgY2xpZW50IHdpdGggdGhlIGRhdGFiYXNlIFVSTFxyXG5jb25zdCBzcWwgPSBuZW9uKHByb2Nlc3MuZW52LkRBVEFCQVNFX1VSTCB8fCBcInBvc3RncmVzcWw6Ly91c2VyOnBhc3N3b3JkQGxvY2FsaG9zdDo1NDMyL21sX2FuYWx5emVyXCIpXHJcblxyXG4vLyBDcmVhdGUgYSBkYXRhYmFzZSBpbnN0YW5jZSB3aXRoIHRoZSBzY2hlbWFcclxuZXhwb3J0IGNvbnN0IGRiID0gZHJpenpsZShzcWwsIHsgc2NoZW1hIH0pXHJcblxyXG4iXSwibmFtZXMiOlsibmVvbiIsImRyaXp6bGUiLCJzY2hlbWEiLCJwcm9jZXNzIiwiZW52IiwiREFUQUJBU0VfVVJMIiwiY29uc29sZSIsIndhcm4iLCJzcWwiLCJkYiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./configs/db.js\n");

/***/ }),

/***/ "(rsc)/./configs/schema.js":
/*!***************************!*\
  !*** ./configs/schema.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyses: () => (/* binding */ analyses),\n/* harmony export */   analysesRelations: () => (/* binding */ analysesRelations),\n/* harmony export */   datasets: () => (/* binding */ datasets),\n/* harmony export */   datasetsRelations: () => (/* binding */ datasetsRelations),\n/* harmony export */   models: () => (/* binding */ models),\n/* harmony export */   modelsRelations: () => (/* binding */ modelsRelations)\n/* harmony export */ });\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/drizzle-orm/pg-core/table.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/drizzle-orm/pg-core/columns/serial.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/drizzle-orm/pg-core/columns/text.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/drizzle-orm/pg-core/columns/integer.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/drizzle-orm/pg-core/columns/real.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/drizzle-orm/pg-core/columns/timestamp.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/drizzle-orm/pg-core/columns/boolean.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/drizzle-orm/pg-core/columns/jsonb.js\");\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! drizzle-orm */ \"(rsc)/./node_modules/drizzle-orm/relations.js\");\n\n\n// Models table\nconst models = (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_0__.pgTable)(\"models\", {\n    id: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.serial)(\"id\").primaryKey(),\n    name: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_2__.text)(\"name\").notNull(),\n    url: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_2__.text)(\"url\").notNull(),\n    size: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_3__.integer)(\"size\").notNull(),\n    contentType: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_2__.text)(\"content_type\").notNull(),\n    // New fields\n    modelType: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_2__.text)(\"model_type\").notNull(),\n    description: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_2__.text)(\"description\").notNull(),\n    algorithm: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_2__.text)(\"algorithm\").notNull(),\n    features: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_2__.text)(\"features\").notNull(),\n    targetVariable: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_2__.text)(\"target_variable\").notNull(),\n    accuracy: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_4__.real)(\"accuracy\"),\n    precision: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_4__.real)(\"precision\"),\n    recall: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_4__.real)(\"recall\"),\n    f1Score: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_4__.real)(\"f1_score\"),\n    createdAt: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_5__.timestamp)(\"created_at\").notNull().defaultNow()\n});\n// Datasets table\nconst datasets = (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_0__.pgTable)(\"datasets\", {\n    id: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.serial)(\"id\").primaryKey(),\n    name: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_2__.text)(\"name\").notNull(),\n    url: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_2__.text)(\"url\").notNull(),\n    size: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_3__.integer)(\"size\").notNull(),\n    contentType: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_2__.text)(\"content_type\").notNull(),\n    isGenerated: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_6__.boolean)(\"is_generated\").default(false),\n    modelId: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_3__.integer)(\"model_id\").references(()=>models.id, {\n        onDelete: \"set null\"\n    }),\n    createdAt: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_5__.timestamp)(\"created_at\").notNull().defaultNow()\n});\n// Analyses table\nconst analyses = (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_0__.pgTable)(\"analyses\", {\n    id: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.serial)(\"id\").primaryKey(),\n    modelId: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_3__.integer)(\"model_id\").notNull().references(()=>models.id, {\n        onDelete: \"cascade\"\n    }),\n    datasetId: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_3__.integer)(\"dataset_id\").references(()=>datasets.id, {\n        onDelete: \"set null\"\n    }),\n    results: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_7__.jsonb)(\"results\").notNull(),\n    createdAt: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_5__.timestamp)(\"created_at\").notNull().defaultNow()\n});\n// Relations\nconst modelsRelations = (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_8__.relations)(models, ({ many })=>({\n        datasets: many(datasets),\n        analyses: many(analyses)\n    }));\nconst datasetsRelations = (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_8__.relations)(datasets, ({ one })=>({\n        model: one(models, {\n            fields: [\n                datasets.modelId\n            ],\n            references: [\n                models.id\n            ]\n        })\n    }));\nconst analysesRelations = (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_8__.relations)(analyses, ({ one })=>({\n        model: one(models, {\n            fields: [\n                analyses.modelId\n            ],\n            references: [\n                models.id\n            ]\n        }),\n        dataset: one(datasets, {\n            fields: [\n                analyses.datasetId\n            ],\n            references: [\n                datasets.id\n            ]\n        })\n    }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUVNLEdBQUcsRUFBRSxHQUFNO1FBQ2pFQyxPQUFPRCxJQUFJL0IsUUFBUTtZQUNqQmlDLFFBQVE7Z0JBQUNSLFNBQVNILE9BQU87YUFBQztZQUMxQkMsWUFBWTtnQkFBQ3ZCLE9BQU9DLEVBQUU7YUFBQztRQUN6QjtRQUNBa0MsU0FBU0osSUFBSVosVUFBVTtZQUNyQmMsUUFBUTtnQkFBQ1IsU0FBU0MsU0FBUzthQUFDO1lBQzVCSCxZQUFZO2dCQUFDSixTQUFTbEIsRUFBRTthQUFDO1FBQzNCO0lBQ0YsSUFBRyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMRU5PVk9cXERlc2t0b3BcXE1haW5zXFxtbC1hbmFseXplclxcY29uZmlnc1xcc2NoZW1hLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBnVGFibGUsIHNlcmlhbCwgdGV4dCwgaW50ZWdlciwgdGltZXN0YW1wLCBib29sZWFuLCBqc29uYixyZWFsIH0gZnJvbSBcImRyaXp6bGUtb3JtL3BnLWNvcmVcIlxyXG5pbXBvcnQgeyByZWxhdGlvbnMgfSBmcm9tIFwiZHJpenpsZS1vcm1cIlxyXG5cclxuLy8gTW9kZWxzIHRhYmxlXHJcbmV4cG9ydCBjb25zdCBtb2RlbHMgPSBwZ1RhYmxlKFwibW9kZWxzXCIsIHtcclxuICBpZDogc2VyaWFsKFwiaWRcIikucHJpbWFyeUtleSgpLFxyXG5cclxuICBuYW1lOiB0ZXh0KFwibmFtZVwiKS5ub3ROdWxsKCksXHJcbiAgdXJsOiB0ZXh0KFwidXJsXCIpLm5vdE51bGwoKSxcclxuICBzaXplOiBpbnRlZ2VyKFwic2l6ZVwiKS5ub3ROdWxsKCksXHJcbiAgY29udGVudFR5cGU6IHRleHQoXCJjb250ZW50X3R5cGVcIikubm90TnVsbCgpLFxyXG5cclxuICAvLyBOZXcgZmllbGRzXHJcbiAgbW9kZWxUeXBlOiB0ZXh0KFwibW9kZWxfdHlwZVwiKS5ub3ROdWxsKCksXHJcbiAgZGVzY3JpcHRpb246IHRleHQoXCJkZXNjcmlwdGlvblwiKS5ub3ROdWxsKCksXHJcbiAgYWxnb3JpdGhtOiB0ZXh0KFwiYWxnb3JpdGhtXCIpLm5vdE51bGwoKSxcclxuICBmZWF0dXJlczogdGV4dChcImZlYXR1cmVzXCIpLm5vdE51bGwoKSwgLy8gY29tbWEtc2VwYXJhdGVkIHN0cmluZ1xyXG4gIHRhcmdldFZhcmlhYmxlOiB0ZXh0KFwidGFyZ2V0X3ZhcmlhYmxlXCIpLm5vdE51bGwoKSxcclxuXHJcbiAgYWNjdXJhY3k6IHJlYWwoXCJhY2N1cmFjeVwiKSxcclxuICBwcmVjaXNpb246IHJlYWwoXCJwcmVjaXNpb25cIiksXHJcbiAgcmVjYWxsOiByZWFsKFwicmVjYWxsXCIpLFxyXG4gIGYxU2NvcmU6IHJlYWwoXCJmMV9zY29yZVwiKSxcclxuXHJcbiAgY3JlYXRlZEF0OiB0aW1lc3RhbXAoXCJjcmVhdGVkX2F0XCIpLm5vdE51bGwoKS5kZWZhdWx0Tm93KCksXHJcbn0pXHJcbi8vIERhdGFzZXRzIHRhYmxlXHJcbmV4cG9ydCBjb25zdCBkYXRhc2V0cyA9IHBnVGFibGUoXCJkYXRhc2V0c1wiLCB7XHJcbiAgaWQ6IHNlcmlhbChcImlkXCIpLnByaW1hcnlLZXkoKSxcclxuICBuYW1lOiB0ZXh0KFwibmFtZVwiKS5ub3ROdWxsKCksXHJcbiAgdXJsOiB0ZXh0KFwidXJsXCIpLm5vdE51bGwoKSxcclxuICBzaXplOiBpbnRlZ2VyKFwic2l6ZVwiKS5ub3ROdWxsKCksXHJcbiAgY29udGVudFR5cGU6IHRleHQoXCJjb250ZW50X3R5cGVcIikubm90TnVsbCgpLFxyXG4gIGlzR2VuZXJhdGVkOiBib29sZWFuKFwiaXNfZ2VuZXJhdGVkXCIpLmRlZmF1bHQoZmFsc2UpLFxyXG4gIG1vZGVsSWQ6IGludGVnZXIoXCJtb2RlbF9pZFwiKS5yZWZlcmVuY2VzKCgpID0+IG1vZGVscy5pZCwgeyBvbkRlbGV0ZTogXCJzZXQgbnVsbFwiIH0pLFxyXG4gIGNyZWF0ZWRBdDogdGltZXN0YW1wKFwiY3JlYXRlZF9hdFwiKS5ub3ROdWxsKCkuZGVmYXVsdE5vdygpLFxyXG59KVxyXG5cclxuLy8gQW5hbHlzZXMgdGFibGVcclxuZXhwb3J0IGNvbnN0IGFuYWx5c2VzID0gcGdUYWJsZShcImFuYWx5c2VzXCIsIHtcclxuICBpZDogc2VyaWFsKFwiaWRcIikucHJpbWFyeUtleSgpLFxyXG4gIG1vZGVsSWQ6IGludGVnZXIoXCJtb2RlbF9pZFwiKVxyXG4gICAgLm5vdE51bGwoKVxyXG4gICAgLnJlZmVyZW5jZXMoKCkgPT4gbW9kZWxzLmlkLCB7IG9uRGVsZXRlOiBcImNhc2NhZGVcIiB9KSxcclxuICBkYXRhc2V0SWQ6IGludGVnZXIoXCJkYXRhc2V0X2lkXCIpLnJlZmVyZW5jZXMoKCkgPT4gZGF0YXNldHMuaWQsIHsgb25EZWxldGU6IFwic2V0IG51bGxcIiB9KSxcclxuICByZXN1bHRzOiBqc29uYihcInJlc3VsdHNcIikubm90TnVsbCgpLFxyXG4gIGNyZWF0ZWRBdDogdGltZXN0YW1wKFwiY3JlYXRlZF9hdFwiKS5ub3ROdWxsKCkuZGVmYXVsdE5vdygpLFxyXG59KVxyXG5cclxuXHJcblxyXG4vLyBSZWxhdGlvbnNcclxuZXhwb3J0IGNvbnN0IG1vZGVsc1JlbGF0aW9ucyA9IHJlbGF0aW9ucyhtb2RlbHMsICh7IG1hbnkgfSkgPT4gKHtcclxuICBkYXRhc2V0czogbWFueShkYXRhc2V0cyksXHJcbiAgYW5hbHlzZXM6IG1hbnkoYW5hbHlzZXMpLFxyXG59KSlcclxuXHJcbmV4cG9ydCBjb25zdCBkYXRhc2V0c1JlbGF0aW9ucyA9IHJlbGF0aW9ucyhkYXRhc2V0cywgKHsgb25lIH0pID0+ICh7XHJcbiAgbW9kZWw6IG9uZShtb2RlbHMsIHtcclxuICAgIGZpZWxkczogW2RhdGFzZXRzLm1vZGVsSWRdLFxyXG4gICAgcmVmZXJlbmNlczogW21vZGVscy5pZF0sXHJcbiAgfSksXHJcbn0pKVxyXG5cclxuZXhwb3J0IGNvbnN0IGFuYWx5c2VzUmVsYXRpb25zID0gcmVsYXRpb25zKGFuYWx5c2VzLCAoeyBvbmUgfSkgPT4gKHtcclxuICBtb2RlbDogb25lKG1vZGVscywge1xyXG4gICAgZmllbGRzOiBbYW5hbHlzZXMubW9kZWxJZF0sXHJcbiAgICByZWZlcmVuY2VzOiBbbW9kZWxzLmlkXSxcclxuICB9KSxcclxuICBkYXRhc2V0OiBvbmUoZGF0YXNldHMsIHtcclxuICAgIGZpZWxkczogW2FuYWx5c2VzLmRhdGFzZXRJZF0sXHJcbiAgICByZWZlcmVuY2VzOiBbZGF0YXNldHMuaWRdLFxyXG4gIH0pLFxyXG59KSlcclxuIl0sIm5hbWVzIjpbInBnVGFibGUiLCJzZXJpYWwiLCJ0ZXh0IiwiaW50ZWdlciIsInRpbWVzdGFtcCIsImJvb2xlYW4iLCJqc29uYiIsInJlYWwiLCJyZWxhdGlvbnMiLCJtb2RlbHMiLCJpZCIsInByaW1hcnlLZXkiLCJuYW1lIiwibm90TnVsbCIsInVybCIsInNpemUiLCJjb250ZW50VHlwZSIsIm1vZGVsVHlwZSIsImRlc2NyaXB0aW9uIiwiYWxnb3JpdGhtIiwiZmVhdHVyZXMiLCJ0YXJnZXRWYXJpYWJsZSIsImFjY3VyYWN5IiwicHJlY2lzaW9uIiwicmVjYWxsIiwiZjFTY29yZSIsImNyZWF0ZWRBdCIsImRlZmF1bHROb3ciLCJkYXRhc2V0cyIsImlzR2VuZXJhdGVkIiwiZGVmYXVsdCIsIm1vZGVsSWQiLCJyZWZlcmVuY2VzIiwib25EZWxldGUiLCJhbmFseXNlcyIsImRhdGFzZXRJZCIsInJlc3VsdHMiLCJtb2RlbHNSZWxhdGlvbnMiLCJtYW55IiwiZGF0YXNldHNSZWxhdGlvbnMiLCJvbmUiLCJtb2RlbCIsImZpZWxkcyIsImFuYWx5c2VzUmVsYXRpb25zIiwiZGF0YXNldCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./configs/schema.js\n");

/***/ }),

/***/ "(rsc)/./lib/gemini.ts":
/*!***********************!*\
  !*** ./lib/gemini.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeModelWithGemini: () => (/* binding */ analyzeModelWithGemini),\n/* harmony export */   chatWithGemini: () => (/* binding */ chatWithGemini),\n/* harmony export */   compareModelsWithGemini: () => (/* binding */ compareModelsWithGemini),\n/* harmony export */   generateDatasetWithGemini: () => (/* binding */ generateDatasetWithGemini),\n/* harmony export */   generateReportWithGemini: () => (/* binding */ generateReportWithGemini)\n/* harmony export */ });\n/* harmony import */ var _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google/generative-ai */ \"(rsc)/./node_modules/@google/generative-ai/dist/index.mjs\");\n\n// Initialize Gemini API with the API key from environment variables\nconst genAI = new _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__.GoogleGenerativeAI(process.env.GEMINI_API_KEY || \"\");\n// Configure safety settings\nconst safetySettings = [\n    {\n        category: _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__.HarmCategory.HARM_CATEGORY_HARASSMENT,\n        threshold: _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__.HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE\n    },\n    {\n        category: _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__.HarmCategory.HARM_CATEGORY_HATE_SPEECH,\n        threshold: _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__.HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE\n    },\n    {\n        category: _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__.HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT,\n        threshold: _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__.HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE\n    },\n    {\n        category: _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__.HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT,\n        threshold: _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__.HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE\n    }\n];\n// Helper function to get the Gemini model\nconst getGeminiModel = (modelName = \"gemini-1.5-flash\")=>{\n    return genAI.getGenerativeModel({\n        model: modelName,\n        safetySettings\n    });\n};\n// Analyze model with Gemini\nasync function analyzeModelWithGemini(model, dataset) {\n    try {\n        const geminiModel = getGeminiModel();\n        // Helper to sanitize values or mark as unknown\n        const safeValue = (value, fallback = \"*Unknown*\")=>value && String(value).trim() !== \"\" ? value : fallback;\n        // Build the prompt\n        const prompt = `\nYou are an expert AI model evaluator. Analyze the following machine learning model.\n\nModel Details:\n- Name: ${safeValue(model.name)}\n- Type: ${safeValue(model.modelType)}\n- Library Used: ${safeValue(model.libraryUsed)}\n- Description: ${safeValue(model.description)}\n- Expected Output: ${safeValue(model.expectedOutput)}\n- Features: ${safeValue(model.features)}\n- Columns of Focus: ${safeValue(model.columnsOfFocus)}\n- Additional Info: ${safeValue(model.additionalInfo)}\n\n${dataset ? `Dataset Details:\n- Name: ${safeValue(dataset.name)}\n- Size: ${safeValue(dataset.size)} bytes` : `Dataset Details: *Not provided*`}\n\n---\n\nPlease provide a comprehensive analysis of this model including:\n\n1. Overall assessment and model score (as a percentage)\n2. Estimated accuracy, precision, recall, and F1 score\n3. Efficiency assessment (High/Medium/Low)\n4. Overview of the model's likely architecture and purpose\n5. Key strengths and weaknesses\n6. Suggestions for improvement\n7. Expected performance characteristics\n8. A few example predictions (with confidence scores)\n\nFormat your response strictly as a **JSON object** with the following keys:\n\n- modelScore\n- accuracy\n- precision\n- recall\n- f1Score\n- rocAuc\n- efficiency\n- overview\n- strengths\n- weaknesses\n- predictions: [{ input, prediction, confidence }]\n    `.trim();\n        // Call Gemini\n        const result = await geminiModel.generateContent(prompt);\n        const response = await result.response;\n        const text = response.text();\n        // Attempt to extract JSON from the response\n        try {\n            const jsonMatch = text.match(/\\{[\\s\\S]*\\}/);\n            if (jsonMatch) {\n                return JSON.parse(jsonMatch[0]);\n            }\n            return JSON.parse(text);\n        } catch (parseError) {\n            console.error(\"⚠️ Error parsing Gemini response:\", parseError);\n            return {\n                modelScore: \"*Random estimate*\",\n                accuracy: \"*0.82*\",\n                precision: \"*0.80*\",\n                recall: \"*0.78*\",\n                f1Score: \"*0.79*\",\n                rocAuc: \"*0.85*\",\n                efficiency: \"*Medium*\",\n                overview: \"Basic analysis generated. Not all input data was provided.\",\n                strengths: \"General-purpose ML capability. Good performance balance.\",\n                weaknesses: \"Lacks context. Dataset not detailed.\",\n                predictions: [\n                    {\n                        input: \"Sample input A\",\n                        prediction: \"Output A\",\n                        confidence: \"*0.87*\"\n                    },\n                    {\n                        input: \"Sample input B\",\n                        prediction: \"Output B\",\n                        confidence: \"*0.74*\"\n                    }\n                ],\n                rawResponse: text\n            };\n        }\n    } catch (error) {\n        console.error(\"❌ Error analyzing model with Gemini:\", error);\n        throw new Error(\"Gemini analysis failed\");\n    }\n}\n// Generate dataset with Gemini\nasync function generateDatasetWithGemini(model, datasetType, datasetSize, description) {\n    try {\n        const geminiModel = getGeminiModel();\n        // Prepare context about the model and dataset requirements\n        const prompt = `Generate a synthetic dataset for the following machine learning model:\n    \nModel Name: ${model.name}\nModel Type: ${model.modelType || \"Unknown\"}\nLibrary Used: ${model.libraryUsed || \"Unknown\"}\nModel Description: ${model.description || \"No description provided\"}\nExpected Output: ${model.expectedOutput || \"Unknown\"}\nFeatures: ${model.features || \"Unknown\"}\nColumns of Focus: ${model.columnsOfFocus || \"None specified\"}\n\nDataset Type Requested: ${datasetType}\nDataset Size Requested: ${datasetSize} samples\nUser Description: ${description}\n\nPlease generate a synthetic dataset with ${datasetSize} samples that matches the description. The dataset should be appropriate for the model type and expected outputs.\n\nFormat the response as a JSON array of objects, where each object represents one sample in the dataset with feature names as keys and values appropriate for the model.\n`;\n        // Generate content with Gemini\n        const result = await geminiModel.generateContent(prompt);\n        const response = await result.response;\n        const text = response.text();\n        // Parse the JSON response\n        try {\n            // Extract JSON array from the response\n            const jsonMatch = text.match(/\\[[\\s\\S]*\\]/);\n            if (jsonMatch) {\n                const jsonStr = jsonMatch[0];\n                return JSON.parse(jsonStr);\n            }\n            // If no JSON array found, try to parse the whole response\n            return JSON.parse(text);\n        } catch (parseError) {\n            console.error(\"Error parsing Gemini dataset response:\", parseError);\n            // If parsing fails, return a simple mock dataset\n            const mockData = [];\n            for(let i = 0; i < datasetSize; i++){\n                if (model.modelType?.toLowerCase().includes(\"classifier\")) {\n                    mockData.push({\n                        feature1: Math.random() * 100,\n                        feature2: Math.random() * 100,\n                        feature3: Math.random() * 100,\n                        label: Math.random() > 0.5 ? \"Class A\" : \"Class B\"\n                    });\n                } else if (model.modelType?.toLowerCase().includes(\"regression\")) {\n                    mockData.push({\n                        feature1: Math.random() * 100,\n                        feature2: Math.random() * 100,\n                        feature3: Math.random() * 100,\n                        target: Math.random() * 1000\n                    });\n                } else {\n                    mockData.push({\n                        feature1: Math.random() * 100,\n                        feature2: Math.random() * 100,\n                        feature3: Math.random() * 100,\n                        output: Math.random() > 0.5 ? \"Yes\" : \"No\"\n                    });\n                }\n            }\n            return mockData;\n        }\n    } catch (error) {\n        console.error(\"Error generating dataset with Gemini:\", error);\n        throw error;\n    }\n}\n// Compare models with Gemini\nasync function compareModelsWithGemini(models, datasetId, analyses) {\n    try {\n        const geminiModel = getGeminiModel();\n        // Prepare context about the models\n        let prompt = `Compare the following machine learning models:\n    \n`;\n        // Add information about each model\n        models.forEach((model, index)=>{\n            prompt += `Model ${index + 1}:\nName: ${model.name}\nType: ${model.modelType || \"Unknown\"}\nLibrary: ${model.libraryUsed || \"Unknown\"}\nDescription: ${model.description || \"No description provided\"}\nExpected Output: ${model.expectedOutput || \"Unknown\"}\nFeatures: ${model.features || \"Unknown\"}\nColumns of Focus: ${model.columnsOfFocus || \"None specified\"}\n\n`;\n        });\n        // Add analyses information if available\n        if (analyses && analyses.length > 0) {\n            prompt += `Previous analyses results:\n`;\n            analyses.forEach((analysis, index)=>{\n                prompt += `Analysis for ${models.find((m)=>m.id === analysis.modelId)?.name || `Model ${index + 1}`}:\n${JSON.stringify(analysis.results, null, 2)}\n\n`;\n            });\n        }\n        prompt += `\nPlease compare these models and provide:\n1. Performance metrics for each model (accuracy, precision, recall, F1 score)\n2. Strengths and weaknesses of each model\n3. Recommendations for which model is best for different scenarios\n\nFormat the response as a JSON array where each object represents a model with the following fields:\nid, name, metrics (containing accuracy, precision, recall, f1Score, efficiency), strengths, and weaknesses.\n`;\n        // Generate content with Gemini\n        const result = await geminiModel.generateContent(prompt);\n        const response = await result.response;\n        const text = response.text();\n        // Parse the JSON response\n        try {\n            // Extract JSON from the response\n            const jsonMatch = text.match(/\\[[\\s\\S]*\\]/);\n            if (jsonMatch) {\n                const jsonStr = jsonMatch[0];\n                return JSON.parse(jsonStr);\n            }\n            // If no JSON found, try to parse the whole response\n            return JSON.parse(text);\n        } catch (parseError) {\n            console.error(\"Error parsing Gemini comparison response:\", parseError);\n            // If parsing fails, return formatted mock data\n            return models.map((model, index)=>({\n                    id: model.id,\n                    name: model.name,\n                    metrics: {\n                        accuracy: (0.85 + index * 0.03).toFixed(2),\n                        precision: (0.88 + index * 0.02).toFixed(2),\n                        recall: (0.82 + index * 0.04).toFixed(2),\n                        f1Score: (0.85 + index * 0.03).toFixed(2),\n                        efficiency: index === 0 ? \"High\" : index === 1 ? \"Medium\" : \"Low\"\n                    },\n                    strengths: [\n                        \"Good performance on numerical features\",\n                        \"Handles missing values well\",\n                        \"Fast inference time\"\n                    ],\n                    weaknesses: [\n                        \"Struggles with categorical features\",\n                        \"Overfits on small datasets\",\n                        \"High memory usage\"\n                    ]\n                }));\n        }\n    } catch (error) {\n        console.error(\"Error comparing models with Gemini:\", error);\n        throw error;\n    }\n}\n// Chat with Gemini about model improvements\nasync function chatWithGemini(message, models, analyses, history) {\n    try {\n        const geminiModel = getGeminiModel();\n        // Prepare context about the models\n        let prompt = `You are an AI assistant specializing in machine learning models. You're helping a user analyze and improve their ML models.\n\nInformation about the user's models:\n`;\n        // Add information about each model\n        models.forEach((model, index)=>{\n            prompt += `Model ${index + 1}:\nName: ${model.name}\nType: ${model.modelType || \"Unknown\"}\nLibrary: ${model.libraryUsed || \"Unknown\"}\nDescription: ${model.description || \"No description provided\"}\nExpected Output: ${model.expectedOutput || \"Unknown\"}\nFeatures: ${model.features || \"Unknown\"}\nColumns of Focus: ${model.columnsOfFocus || \"None specified\"}\n\n`;\n        });\n        // Add analyses information if available\n        if (analyses && analyses.length > 0) {\n            prompt += `Previous analyses results:\n`;\n            analyses.forEach((analysis, index)=>{\n                prompt += `Analysis for ${models.find((m)=>m.id === analysis.modelId)?.name || `Model ${index + 1}`}:\n${JSON.stringify(analysis.results, null, 2)}\n\n`;\n            });\n        }\n        // Add conversation history\n        if (history && history.length > 0) {\n            prompt += `\\nConversation history:\n`;\n            history.forEach((msg)=>{\n                prompt += `${msg.role === \"user\" ? \"User\" : \"Assistant\"}: ${msg.content}\n`;\n            });\n        }\n        // Add the current message\n        prompt += `\\nUser: ${message}\n\nPlease provide a helpful, informative response about the user's machine learning models. If you don't have enough information, ask clarifying questions. Format your response in Markdown for better readability.\n`;\n        // Generate content with Gemini\n        const result = await geminiModel.generateContent(prompt);\n        const response = await result.response;\n        const text = response.text();\n        return text;\n    } catch (error) {\n        console.error(\"Error chatting with Gemini:\", error);\n        throw error;\n    }\n}\n// Generate report with Gemini\nasync function generateReportWithGemini(models, analyses, options) {\n    try {\n        // For now, we'll return mock report data\n        // In a real implementation, we would:\n        // 1. Format the model metadata and analyses\n        // 2. Send to Gemini to generate a comprehensive report\n        // 3. Return the structured report data\n        // Mock report data\n        return {\n            models: models.map((model, index)=>({\n                    id: model.id,\n                    name: model.name,\n                    metrics: {\n                        accuracy: (0.85 + index * 0.03).toFixed(2),\n                        precision: (0.88 + index * 0.02).toFixed(2),\n                        recall: (0.82 + index * 0.04).toFixed(2),\n                        f1Score: (0.85 + index * 0.03).toFixed(2)\n                    }\n                })),\n            predictions: [\n                {\n                    input: \"Sample 1\",\n                    prediction: \"Class A\",\n                    confidence: \"0.95\",\n                    actual: \"Class A\"\n                },\n                {\n                    input: \"Sample 2\",\n                    prediction: \"Class B\",\n                    confidence: \"0.87\",\n                    actual: \"Class B\"\n                },\n                {\n                    input: \"Sample 3\",\n                    prediction: \"Class A\",\n                    confidence: \"0.92\",\n                    actual: \"Class A\"\n                },\n                {\n                    input: \"Sample 4\",\n                    prediction: \"Class C\",\n                    confidence: \"0.78\",\n                    actual: \"Class B\"\n                },\n                {\n                    input: \"Sample 5\",\n                    prediction: \"Class B\",\n                    confidence: \"0.89\",\n                    actual: \"Class B\"\n                }\n            ],\n            recommendations: [\n                {\n                    title: \"Feature Engineering\",\n                    description: \"Consider adding polynomial features or interaction terms to capture non-linear relationships in your data.\"\n                },\n                {\n                    title: \"Hyperparameter Tuning\",\n                    description: \"Use grid search or random search to find optimal hyperparameters for your model.\"\n                },\n                {\n                    title: \"Ensemble Methods\",\n                    description: \"Combine multiple models to improve overall performance. Consider using stacking or boosting techniques.\"\n                },\n                {\n                    title: \"Regularization\",\n                    description: \"Add L1 or L2 regularization to prevent overfitting, especially if your model has many features.\"\n                }\n            ]\n        };\n    } catch (error) {\n        console.error(\"Error generating report with Gemini:\", error);\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/gemini.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcompare%2Fmodels%2Froute&page=%2Fapi%2Fcompare%2Fmodels%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcompare%2Fmodels%2Froute.ts&appDir=C%3A%5CUsers%5CLENOVO%5CDesktop%5CMains%5Cml-analyzer%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CLENOVO%5CDesktop%5CMains%5Cml-analyzer&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcompare%2Fmodels%2Froute&page=%2Fapi%2Fcompare%2Fmodels%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcompare%2Fmodels%2Froute.ts&appDir=C%3A%5CUsers%5CLENOVO%5CDesktop%5CMains%5Cml-analyzer%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CLENOVO%5CDesktop%5CMains%5Cml-analyzer&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_LENOVO_Desktop_Mains_ml_analyzer_app_api_compare_models_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/compare/models/route.ts */ \"(rsc)/./app/api/compare/models/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/compare/models/route\",\n        pathname: \"/api/compare/models\",\n        filename: \"route\",\n        bundlePath: \"app/api/compare/models/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\Mains\\\\ml-analyzer\\\\app\\\\api\\\\compare\\\\models\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_LENOVO_Desktop_Mains_ml_analyzer_app_api_compare_models_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZjb21wYXJlJTJGbW9kZWxzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZjb21wYXJlJTJGbW9kZWxzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY29tcGFyZSUyRm1vZGVscyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNMRU5PVk8lNUNEZXNrdG9wJTVDTWFpbnMlNUNtbC1hbmFseXplciU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDTEVOT1ZPJTVDRGVza3RvcCU1Q01haW5zJTVDbWwtYW5hbHl6ZXImaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQ21DO0FBQ2hIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxMRU5PVk9cXFxcRGVza3RvcFxcXFxNYWluc1xcXFxtbC1hbmFseXplclxcXFxhcHBcXFxcYXBpXFxcXGNvbXBhcmVcXFxcbW9kZWxzXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jb21wYXJlL21vZGVscy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2NvbXBhcmUvbW9kZWxzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9jb21wYXJlL21vZGVscy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXExFTk9WT1xcXFxEZXNrdG9wXFxcXE1haW5zXFxcXG1sLWFuYWx5emVyXFxcXGFwcFxcXFxhcGlcXFxcY29tcGFyZVxcXFxtb2RlbHNcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcompare%2Fmodels%2Froute&page=%2Fapi%2Fcompare%2Fmodels%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcompare%2Fmodels%2Froute.ts&appDir=C%3A%5CUsers%5CLENOVO%5CDesktop%5CMains%5Cml-analyzer%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CLENOVO%5CDesktop%5CMains%5Cml-analyzer&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry","vendor-chunks/drizzle-orm","vendor-chunks/@neondatabase","vendor-chunks/@google"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fcompare%2Fmodels%2Froute&page=%2Fapi%2Fcompare%2Fmodels%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcompare%2Fmodels%2Froute.ts&appDir=C%3A%5CUsers%5CLENOVO%5CDesktop%5CMains%5Cml-analyzer%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CLENOVO%5CDesktop%5CMains%5Cml-analyzer&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();